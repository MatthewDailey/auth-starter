// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  auth0Id       String   @unique
  email         String   @unique
  name          String?
  picture       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Organization relationships
  ownedOrganizations Organization[] @relation("OrganizationOwner")
  teamMemberships    TeamMember[]
}

model Organization {
  id            String   @id @default(uuid())
  name          String
  slug          String   @unique
  ownerId       String
  owner         User     @relation("OrganizationOwner", fields: [ownerId], references: [id])
  
  // SAML Configuration
  samlEnabled   Boolean  @default(false)
  samlEntryPoint String?
  samlIssuer    String?
  samlCert      String?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  teamMembers   TeamMember[]
}

model TeamMember {
  id              String       @id @default(uuid())
  userId          String
  user            User         @relation(fields: [userId], references: [id])
  organizationId  String
  organization    Organization @relation(fields: [organizationId], references: [id])
  role            TeamRole     @default(MEMBER)
  joinedAt        DateTime     @default(now())
  
  @@unique([userId, organizationId])
}

enum TeamRole {
  OWNER
  ADMIN
  MEMBER
}
